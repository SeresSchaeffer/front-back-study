'use strict';

const fs = require('fs');

const CoaObject = require('./coaobject');

/**
 * COA Parameter
 *
 * Base class for options and arguments
 *
 * --------|-----|-----|-----
 *         | Cmd | Opt | Arg
 * --------|-----|-----|-----
 *  arr    |     | ✓   | ✓
 *  req    |     | ✓   | ✓
 *  val    |     | ✓   | ✓
 *  def    |     | ✓   | ✓
 *  input  |     | ✓   | ✓
 *  output |     | ✓   | ✓
 *
 * @class CoaParam
 * @extends CoaObject
 */
module.exports = class CoaParam extends CoaObject {
    constructor(cmd) {
        super(cmd);

        this._arr = false;
        this._req = false;
        this._val = undefined;
        this._def = undefined;
    }

    /**
     * Makes a param accepts multiple values.
     * Otherwise, the value will be used by the latter passed.
     *
     * @returns {COA.CoaParam} - this instance (for chainability)
     */
    arr() {
        this._arr = true;
        return this;
    }

    /**
     * Makes a param required.
     *
     * @returns {COA.CoaParam} - this instance (for chainability)
     */
    req() {
        this._req = true;
        return this;
    }

    /**
     * Set a validation (or value) function for param.
     * Value from command line passes through before becoming available from API.
     * Using for validation and convertion simple types to any values.
     *
     * @param {Function} val - validating function,
     *         invoked in the context of option instance
     *         and has o